#!/bin/bash

set -x

unset KUBECONFIG
for localns in $(/usr/bin/oc get migrationcontrollers.migration.openshift.io --all-namespaces --no-headers | awk '{print $1}'); do
  clusters=()
  clusters+=(host)
  for c in $(oc -n ${localns} get migclusters -o custom-columns=name:.metadata.name --no-headers); do
    if [ $(oc -n ${localns} get migcluster ${c} -o go-template='{{ .spec.isHostCluster }}') == "false" ]; then
      clusters+=(${c})
    fi
  done

  for cluster in ${clusters[@]}; do
    unset KUBECONFIG
    if [ ${cluster} != "host" ]; then
      token=$(oc get -n $(oc get -n ${localns} migcluster ${cluster} -o go-template='{{ .spec.serviceAccountSecretRef.namespace }}') secret $(oc get -n ${localns} migcluster ${cluster} -o go-template='{{ .spec.serviceAccountSecretRef.name }}') -o go-template='{{ .data.saToken }}' | base64 -d)
      url=$(oc get -n ${localns} migcluster ${cluster} -o go-template='{{ .spec.url }}')
      export KUBECONFIG=/tmp/kubeconfig
      oc login --insecure-skip-tls-verify=true --token=${token} $url
      if [ "$?" != "0" ]; then
        object_collection_path="/must-gather/${cluster}/"
        mkdir -p ${object_collection_path}
        echo "login to cluster ${cluster} unsuccessful."  > "${object_collection_path}/login_error.txt"
        continue
      fi
    fi

    for ns in $(/usr/bin/oc get migrationcontrollers.migration.openshift.io --all-namespaces --no-headers | awk '{print $1}'); do
      for pod in $(/usr/bin/oc get pods --no-headers --namespace $ns | awk '{print $1}'); do
        object_collection_path="/must-gather/${cluster}/namespaces/${ns}/logs/${pod}"
        mkdir -p ${object_collection_path}
        /usr/bin/oc logs --all-containers --namespace ${ns} ${pod} > "${object_collection_path}/current.log"
        /usr/bin/oc logs --previous --all-containers --namespace ${ns} ${pod} > "${object_collection_path}/previous.log"
      done

      for kind in backup restore; do
        object_collection_path="/must-gather/${cluster}/namespaces/${ns}/logs/velero-${kind}-logs"
        mkdir -p ${object_collection_path}
        export resources=()
        for i in $(oc -n ${ns} exec $(oc -n ${ns} get po -l component=velero -o custom-columns=name:.metadata.name --no-headers) -- /bin/bash -c "/velero get ${kind}s | grep -v NAME | awk '{ print \$1 }'" | tr -d '\r'); do
          resources+=($i)
        done
        for resource in ${resources[@]}; do
          oc -n ${ns} exec $(oc -n ${ns} get po -l component=velero -o custom-columns=name:.metadata.name --no-headers) -- /bin/bash -c "/velero ${kind} logs $resource" > "${object_collection_path}/$resource-${kind}.log"
          oc -n ${ns} exec $(oc -n ${ns} get po -l component=velero -o custom-columns=name:.metadata.name --no-headers) -- /bin/bash -c "/velero ${kind} describe $resource --details" > "${object_collection_path}/$resource-${kind}-describe.log"
        done
      done
    done
  done
done

set +x